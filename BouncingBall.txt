;************************************
; Program: Bouncing Ball
;************************************
jmp [main]

:x		: 50
:y		: 20
:vx		: 1
:vy		: 0
:step		: 4
:ball		.00011000
		.00111100
		.01111110
		.01111110
		.00111100
		.00011000
:main	clear
	call [draw]
	if [vx] #0 call [left]
	if [vx] #1 call [right]
	if [vy] #0 call [up]
	if [vy] #1 call [down]
	call [check]
	jmp [main]

:draw	draw [x][y][ball]
	return

:check	ifg [x] #240 call [change_left]
	ifl [x] #8 call [change_right]
	ifg [y] #120 call [change_up]
	ifl [y] #6 call [change_down]
	return

:left	load [x]
	load [step]
	sub
	store [x]
	return

:right	load [x]
	load [step]
	add
	store [x]
	return

:up	load [y]
	load [step]
	sub
	store [y]
	return

:down	load [y]
	load [step]
	add
	store [y]
	return

:change_left
	storev [vx] #0
	return

:change_right
	storev [vx] #1
	return

:change_up
	storev [vy] #0
	return

:change_down
	storev [vy] #1
	return
